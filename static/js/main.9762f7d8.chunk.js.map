{"version":3,"sources":["layout/Header.js","layout/Footer.js","shared/Slider.js","components/Home.js","components/Services.js","components/About.js","components/Contact.js","components/Login.js","App.js","redux/actions/taskAction.js","redux/actions/actions.js","serviceWorker.js","redux/reducers/taskReducer.js","redux/reducers/index.js","redux/store/store.js","index.js"],"names":["Header","useState","menuToggle","setMenuToggle","className","onClick","href","class","to","process","Footer","itemToggle","setItemToggle","openAccordian","item","Slider","props","state","data","loading","console","log","this","setState","React","Component","Home","Services","About","Contact","Login","App","GetUsers","Loading","exact","path","component","connect","task","dispatch","axios","get","then","res","persons","type","users","Boolean","window","location","hostname","match","INITIAL_STATE","Users","rootReducer","combineReducers","action","persistConfig","key","storage","middlewares","thunk","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","persistor","persistStore","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9762f7d8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/css/header.css'\r\n// import logo from '../assets/img/logo_465x320.png'\r\n\r\nfunction Header() {\r\n\r\n    const [menuToggle, setMenuToggle] = useState(false);\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"header\">\r\n\r\n                <div className={\"mobile-menu-toggle \" + (menuToggle ? 'change' : '')} onClick={() => setMenuToggle(!menuToggle)}>\r\n                    <div className=\"bar1\"></div>\r\n                    <div className=\"bar2\"></div>\r\n                    <div className=\"bar3\"></div>\r\n                </div>\r\n\r\n                <div className=\"desktop-menu container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                            <div className='logo'>\r\n                                <a href=\"#\"><i class=\"fas fa-dice-d20\"></i>ReactJS</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-8 col-md-8 col-lg-8\">\r\n                            <div className=\"nav\">\r\n                                 <ul>\r\n                                    <li><Link to={process.env.PUBLIC_URL + '/home'}>Home</Link></li>\r\n                                    <li><Link to={process.env.PUBLIC_URL + '/services'}>Services</Link></li>\r\n                                    <li><Link to={process.env.PUBLIC_URL + '/about'}>About</Link></li>\r\n                                    <li><Link to={process.env.PUBLIC_URL + '/contact'}>Contact</Link></li>\r\n                                    <li><Link to={process.env.PUBLIC_URL + '/login'}>Login</Link></li>\r\n                                 </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={\"mobile-menu sidenav \" + (menuToggle ? 'open' : 'close')}>\r\n\r\n                    <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n                        <div className='logo'>\r\n                            <a href=\"#\"><i class=\"fas fa-dice-d20\"></i></a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <li><Link to={process.env.PUBLIC_URL + '/home'} onClick={() => setMenuToggle(!menuToggle)}>Home</Link></li>\r\n                    <li><Link to={process.env.PUBLIC_URL + '/services'} onClick={() => setMenuToggle(!menuToggle)}>Services</Link></li>\r\n                    <li><Link to={process.env.PUBLIC_URL + '/about'} onClick={() => setMenuToggle(!menuToggle)}>About</Link></li>\r\n                    <li><Link to={process.env.PUBLIC_URL + '/contact'} onClick={() => setMenuToggle(!menuToggle)}>Contact</Link></li>\r\n                    <li><Link to={process.env.PUBLIC_URL + '/login'} onClick={() => setMenuToggle(!menuToggle)}>Login</Link></li>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport '../assets/css/footer.css';\r\n\r\nfunction Footer() {\r\n\r\n    const [itemToggle, setItemToggle] = useState('');\r\n\r\n    const openAccordian = (item) => {\r\n        if (item == itemToggle) {\r\n            setItemToggle('');\r\n        }\r\n        else {\r\n            setItemToggle(item);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"footer\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"first\">\r\n                                <h3>Logo</h3>\r\n                                <p className=\"pt-2\">Establecido hace demasiado tiempo que un lector se distraerá con el contenido del texto de un sitio mientras que mira su diseño. El punto de usar que tiene una distribución menos normal de las letras contrario de usar textos como por ejemplo .</p>\r\n\r\n                                <div className=\"pt-4\">\r\n                                    <a className=\"press\" href=\"#\">Read More</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"first\">\r\n                                <h3>\r\n                                    <span>COMPANY</span>\r\n                                    <a onClick={() => openAccordian('company')}>\r\n                                        {\r\n                                            itemToggle == 'company' ?\r\n                                            <i class=\"fas fa-chevron-up\"></i>\r\n                                            :\r\n                                            <i class=\"fas fa-chevron-down\"></i>\r\n                                        }\r\n                                    </a>\r\n                                </h3>\r\n                                <ul className={\"\" + (itemToggle == 'company' ? 'open' : '')}>\r\n                                    <li><a href=\"#\">Our History</a></li>\r\n                                    <li><a href=\"#\"> Investor Relations & Policies</a></li>\r\n                                    <li><a href=\"#\">Careers</a></li>\r\n                                    <li><a href=\"#\">Gift Cards</a></li>\r\n                                    <li><a href=\"#\">Sale 30%</a></li>\r\n                                    <li><a href=\"#\">Merchandise Store</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div> \r\n\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"first\">\r\n                                <h3>\r\n                                    <span>STAY CONNECTED</span>\r\n                                    <a onClick={() => openAccordian('stay-connected')}>\r\n                                        {\r\n                                            itemToggle == 'stay-connected' ?\r\n                                            <i class=\"fas fa-chevron-up\"></i>\r\n                                            :\r\n                                            <i class=\"fas fa-chevron-down\"></i>\r\n                                        }\r\n                                    </a>\r\n                                </h3>\r\n                                <ul className={\"\" + (itemToggle == 'stay-connected' ? 'open' : '')}>\r\n                                    <li><a href=\"#\">Facebook</a></li>\r\n                                    <li><a href=\"#\">Instagram</a></li>\r\n                                    <li><a href=\"#\">Twitter</a></li>\r\n                                    <li><a href=\"#\">Messenger</a></li>\r\n                                    <li><a href=\"#\">Our App</a></li>\r\n                                    <li><a href=\"#\">111-235-0101</a></li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"seprator\"></div>\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"last pt-4\">\r\n                                <p>© Copyright 2020, Logo. All Rights Reserved.</p>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../assets/css/slider.css';\r\n\r\nclass Slider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Slider\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Slider Slider Slider</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Slider;","import React from 'react';\r\nimport Slider from '../shared/Slider';\r\nimport '../assets/css/home.css';\r\n// import { Link } from 'react-router-dom';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Home\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Slider />\r\n                <section>\r\n                    <p>Home Home Home</p>\r\n\r\n                    {/* <Link to=\"/contact\">View All Deals</Link> */}\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\r\nimport '../assets/css/services.css';\r\n\r\nclass Services extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Services\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Services Services Services</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Services;","import React from 'react';\r\nimport '../assets/css/about.css';\r\n\r\nclass About extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"About\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>About About About</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default About;","import React from 'react';\r\nimport '../assets/css/contact.css';\r\n\r\nclass Contact extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Contact\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Contact Contact Contact</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport '../assets/css/login.css';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            loading: false\r\n        };\r\n    } \r\n\r\n    componentDidMount() {\r\n        console.log(\"Login\");\r\n\r\n        this.setState({\r\n            loading: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <p>Login Login Login</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './layout/Header';\r\nimport Footer from './layout/Footer';\r\nimport Home from './components/Home';\r\nimport Services from './components/Services';\r\nimport About from './components/About';\r\nimport Contact from './components/Contact';\r\nimport Login from './components/Login';\r\n\r\nimport { \r\n  BrowserRouter as Router, \r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  GetUsers\r\n} from \"./redux/actions/taskAction\";\r\n\r\nclass App extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // making all API calls and store in the redux-store\r\n    this.props.GetUsers();\r\n  }\r\n\r\n  render() {\r\n    console.log(\"this.props.tasksss \", this.props.Loading);\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n            \r\n            {/* all components */} \r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path={process.env.PUBLIC_URL + '/react-boilerplate'}>\r\n                  <Redirect to={process.env.PUBLIC_URL + '/login'} />\r\n                </Route>\r\n  \r\n                <Route exact path=\"/\">\r\n                  <Redirect to={process.env.PUBLIC_URL + '/login'} />\r\n                </Route>\r\n  \r\n                <Route exact path={process.env.PUBLIC_URL + '/'} component={Home}></Route>\r\n                <Route exact path={process.env.PUBLIC_URL + '/home'} component={Home}></Route>\r\n                <Route exact path={process.env.PUBLIC_URL + '/services'} component={Services}></Route>\r\n                <Route exact path={process.env.PUBLIC_URL + '/about'} component={About}></Route>\r\n                <Route exact path={process.env.PUBLIC_URL + '/contact'} component={Contact}></Route>\r\n                <Route exact path={process.env.PUBLIC_URL + '/login'} component={Login}></Route>\r\n              </Switch>\r\n            </div>\r\n  \r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Loading: state.task.loading\r\n});\r\n\r\nconst mapDispacthToProps = dispatch => {\r\n  return {\r\n    GetUsers: () => dispatch(GetUsers())    \r\n  };\r\n\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispacthToProps\r\n)(App);\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    GET_USERS,\r\n} from \"./actions\";\r\n\r\nexport const GetUsers = () => {\r\n    console.log(\"GetUsers\");\r\n\r\n    return dispatch => {\r\n        console.log(\"GetUsers dispatch\");\r\n\r\n        axios.get(`https://reqres.in/api/users`)\r\n        .then(res => {\r\n            const persons = res.data;\r\n\r\n            dispatch({\r\n                type: GET_USERS,\r\n                users: persons\r\n            });\r\n        })\r\n    };\r\n};\r\n\r\nexport const AddUser = (params) => {\r\n    console.log(\"AddUser\");\r\n\r\n    return dispatch => {\r\n        console.log(\"Add User dispatch\");\r\n\r\n        axios.post(`https://reqres.in/api/users`, {params})\r\n        .then(response => {\r\n            console.log(response);\r\n\r\n            axios.get(`https://reqres.in/api/users`)\r\n            .then(res => {\r\n                console.log(res);\r\n\r\n                dispatch({\r\n                    type: GET_USERS,\r\n                    users: response\r\n                });\r\n            })\r\n        })\r\n    };\r\n};","export const GET_USERS = \"GET_USERS\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { \r\n    GET_USERS,\r\n  } from \"../actions/actions\";\r\n\r\n  const INITIAL_STATE = {\r\n    Users: [],\r\n    loading : false,\r\n  };\r\n\r\n  export default (state = INITIAL_STATE, action) => {\r\n    //  console.log(\"task reducer\"  , action);\r\n\r\n    switch (action.type) {\r\n      case GET_USERS: {\r\n        return {\r\n          ...state,\r\n          Users: action.users,\r\n          loading: false\r\n        };\r\n      }\r\n      default:\r\n        return state;\r\n    }\r\n  };","import { combineReducers } from 'redux';\r\nimport TaskReducer from './taskReducer'; //add this line\r\n\r\nconst rootReducer = combineReducers({\r\n  task:TaskReducer  //add taskreducer and name is task for future use.\r\n});\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from '../reducers/index';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nconst persistConfig = {\r\n   key: 'root',\r\n   storage: storage,\r\n}\r\n\r\nconst middlewares = [thunk];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n   const { logger } = require(`redux-logger`);\r\n\r\n   middlewares.push(logger);\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport default () => {\r\n   let store = createStore(\r\n     persistedReducer,\r\n     applyMiddleware(...middlewares)\r\n   )\r\n\r\n   let persistor = persistStore(store)\r\n   return { store, persistor }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\r\nimport configureStore from \"./redux/store/store\";\r\n\r\nlet { store, persistor } = configureStore();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n      <Provider store={store}>\r\n          <PersistGate loading={null} persistor={persistor}>\r\n              <App />\r\n          </PersistGate>\r\n      </Provider>,\r\n  </BrowserRouter>, \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}